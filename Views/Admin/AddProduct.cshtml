@model olshop.Models.Product
@{
    ViewData["Title"] = "Add Product";
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
    
    bool IsColorDark(string color)
    {
        // Simple implementation - can be enhanced
        var darkColors = new[] { "black", "navy", "blue", "darkblue", "purple", "darkpurple", "brown", "darkbrown", "green", "darkgreen" };
        return darkColors.Contains(color.ToLower());
    }
}

@section Styles {
    <link rel="stylesheet" href="~/admin/css/product-editor.css" />
}

<!-- Add Product Form -->
<div class="row">
    <div class="col-12">
        <div class="card mb-4">
            <div class="card-body">
                <form asp-controller="Admin" asp-action="AddProduct" method="post">
                    <!-- Basic Information -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h5 class="card-title mb-3">Basic Information</h5>
                        </div>
                        
                        <div class="col-md-6 mb-3">
                            <label for="Id" class="form-label">Product ID</label>
                            <div class="input-group">
                                <input type="text" class="form-control" id="Id" placeholder="Auto-generated" disabled>
                                <span class="input-group-text">Auto-generated</span>
                            </div>
                            <div class="form-text">Unique identifier for the product</div>
                        </div>
                        
                        <div class="col-md-6 mb-3">
                            <label for="Name" class="form-label">Product Name *</label>
                            <input type="text" class="form-control" id="Name" name="Name" required>
                        </div>
                        
                        <div class="col-md-6 mb-3">
                            <label for="Category" class="form-label">Category *</label>
                            <select class="form-select" id="Category" name="Category" required>
                                <option value="" selected disabled>Select category</option>
                                <option value="Bags">Bags</option>
                                <option value="Accessories">Accessories</option>
                                <option value="Jewelry">Jewelry</option>
                                <option value="Watches">Watches</option>
                                <option value="Clothing">Clothing</option>
                            </select>
                        </div>
                        
                        <div class="col-md-6 mb-3">
                            <label for="Description" class="form-label">Description</label>
                            <textarea class="form-control" id="Description" name="Description" rows="3"></textarea>
                        </div>
                    </div>
                    
                    <!-- Pricing Information -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h5 class="card-title mb-3">Pricing Information</h5>
                        </div>
                        
                        <div class="col-md-4 mb-3">
                            <label for="Price" class="form-label">Price ($) *</label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input type="number" class="form-control" id="Price" name="Price" min="0" step="0.01" required>
                            </div>
                        </div>
                        
                        <div class="col-md-4 mb-3">
                            <label for="OldPrice" class="form-label">Old Price ($)</label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input type="number" class="form-control" id="OldPrice" name="OldPrice" min="0" step="0.01">
                            </div>
                        </div>
                        
                        <div class="col-md-4 mb-3">
                            <label for="Rating" class="form-label">Rating</label>
                            <div class="input-group">
                                <input type="number" class="form-control" id="Rating" name="Rating" min="0" max="5" step="0.1" value="0">
                                <span class="input-group-text"><i class="bi bi-star-fill text-warning"></i></span>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Product Details -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h5 class="card-title mb-3">Product Details</h5>
                        </div>
                        
                        <div class="col-md-4 mb-3">
                            <label for="Material" class="form-label">Material</label>
                            <input type="text" class="form-control" id="Material" name="Material">
                        </div>
                        
                        <div class="col-md-4 mb-3">
                            <label for="Dimensions" class="form-label">Dimensions</label>
                            <input type="text" class="form-control" id="Dimensions" name="Dimensions" placeholder="e.g., 30cm x 20cm x 10cm">
                        </div>
                        
                        <div class="col-md-4 mb-3">
                            <label for="Weight" class="form-label">Weight (grams)</label>
                            <div class="input-group">
                                <input type="number" class="form-control" id="Weight" name="Weight" min="0">
                                <span class="input-group-text">g</span>
                            </div>
                        </div>
                        
                        <div class="col-md-6 mb-3">
                            <label for="ReviewCount" class="form-label">Review Count</label>
                            <input type="number" class="form-control" id="ReviewCount" name="ReviewCount" min="0" value="0">
                        </div>
                        
                        <div class="col-md-6 mb-3">
                            <label for="ImageUrl" class="form-label">Main Image URL *</label>
                            <input type="text" class="form-control" id="ImageUrl" name="ImageUrl" required placeholder="https://example.com/image.jpg">
                        </div>
                        
                        <div class="col-12 mb-3">
                            <label class="form-label">Gallery Images</label>
                            <div id="gallery-images-container" class="d-flex flex-wrap mb-2">
                                <!-- Gallery images will be added here -->
                            </div>
                            <div class="input-group">
                                <input type="text" id="new-gallery-image-input" class="form-control" placeholder="https://example.com/gallery-image.jpg">
                                <button type="button" id="add-gallery-image-btn" class="btn btn-outline-primary">
                                    <i class="bi bi-plus"></i> Add Image
                                </button>
                            </div>
                            <small class="form-text text-muted">Add additional product images for the gallery</small>
                            <div class="invalid-feedback" id="gallery-image-validation-feedback"></div>
                        </div>
                    </div>
                    
                    <!-- Note about images -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle-fill me-2"></i>
                                <span>For this demo, please enter image URLs directly. In a production environment, file upload functionality would be implemented.</span>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Simplified Colors, Tags, and Features -->
                    <div class="row mb-4">
                        <div class="col-md-4 mb-3">
                            <h5 class="card-title mb-3">Colors</h5>
                            <input type="text" class="form-control mb-2" id="Colors" name="Colors" placeholder="Black, Brown, Pink">
                            <div class="form-text">Enter colors separated by commas</div>
                        </div>
                        
                        <div class="col-md-4 mb-3">
                            <h5 class="card-title mb-3">Tags</h5>
                            <input type="text" class="form-control mb-2" id="Tags" name="Tags" placeholder="Luxury, Fashion, Trending">
                            <div class="form-text">Enter tags separated by commas</div>
                        </div>
                        
                        <div class="col-md-4 mb-3">
                            <h5 class="card-title mb-3">Features</h5>
                            <textarea class="form-control" id="Features" name="Features" rows="3" placeholder="Premium quality materials&#10;Adjustable straps&#10;Multiple compartments"></textarea>
                            <div class="form-text">Enter each feature on a new line</div>
                        </div>
                    </div>
                    
                    <!-- Product Status -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h5 class="card-title mb-3">Product Status</h5>
                        </div>
                        
                        <div class="col-md-4 mb-3">
                            <div class="form-check form-switch">
                                <input asp-for="IsFeatured" class="form-check-input" type="checkbox">
                                <label asp-for="IsFeatured" class="form-check-label">Featured Product</label>
                            </div>
                            <div class="form-text">Display this product in featured sections</div>
                        </div>
                        
                        <div class="col-md-4 mb-3">
                            <div class="form-check form-switch">
                                <input asp-for="IsBestSeller" class="form-check-input" type="checkbox">
                                <label asp-for="IsBestSeller" class="form-check-label">Best Seller</label>
                            </div>
                            <div class="form-text">Mark this product as a best seller</div>
                        </div>
                        
                        <div class="col-md-4 mb-3">
                            <label for="Status" class="form-label">Stock Status</label>
                            <select class="form-select" id="Status" name="Status">
                                <option value="In Stock" selected>In Stock</option>
                                <option value="Low Stock">Low Stock</option>
                                <option value="Out of Stock">Out of Stock</option>
                            </select>
                            <div class="form-text">Current inventory status</div>
                        </div>
                    </div>
                    
                    <!-- Form Actions -->
                    <div class="row">
                        <div class="col-12 d-flex justify-content-end">
                            <a asp-controller="Admin" asp-action="Products" class="btn btn-outline-secondary me-2">Cancel</a>
                            <button type="submit" class="btn btn-primary">Add Product</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="~/admin/js/product-editor.js"></script>
    <script>
        $(document).ready(function() {
            // Initialize gallery image handling
            initializeGalleryImageManager();
            
            // Form validation and submission handling
            $('form').on('submit', function(e) {
                if (!validateAddProductForm()) {
                    e.preventDefault();
                    return false;
                }
                
                // Process collection inputs before submission
                processCollectionInputs();
            });
            
            // Detect touch devices
            const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
            if (isTouchDevice) {
                document.body.classList.add('touch-device');
            }
        });
        
        // Process collection inputs (Features, Colors, Tags)
        function processCollectionInputs() {
            // Process Features (split by newlines)
            const featuresTextarea = document.getElementById('Features');
            if (featuresTextarea && featuresTextarea.value.trim()) {
                const features = featuresTextarea.value.split('\n')
                    .map(f => f.trim())
                    .filter(f => f);
                
                // Clear the textarea
                featuresTextarea.value = '';
                
                // Create hidden inputs for each feature
                features.forEach(feature => {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = 'Features';
                    input.value = feature;
                    document.querySelector('form').appendChild(input);
                });
            }
            
            // Process Colors (split by commas)
            const colorsInput = document.getElementById('Colors');
            if (colorsInput && colorsInput.value.trim()) {
                const colors = colorsInput.value.split(',')
                    .map(c => c.trim())
                    .filter(c => c);
                
                // Clear the input
                colorsInput.value = '';
                
                // Create hidden inputs for each color
                colors.forEach(color => {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = 'Colors';
                    input.value = color;
                    document.querySelector('form').appendChild(input);
                });
            }
            
            // Process Tags (split by commas)
            const tagsInput = document.getElementById('Tags');
            if (tagsInput && tagsInput.value.trim()) {
                const tags = tagsInput.value.split(',')
                    .map(t => t.trim())
                    .filter(t => t);
                
                // Clear the input
                tagsInput.value = '';
                
                // Create hidden inputs for each tag
                tags.forEach(tag => {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = 'Tags';
                    input.value = tag;
                    document.querySelector('form').appendChild(input);
                });
            }
        }
        
        // Initialize gallery image manager
        function initializeGalleryImageManager() {
            const galleryContainer = document.getElementById('gallery-images-container');
            const imageInput = document.getElementById('new-gallery-image-input');
            const addImageBtn = document.getElementById('add-gallery-image-btn');
            
            // Add event listener for adding new gallery images
            addImageBtn.addEventListener('click', function() {
                addGalleryImage(imageInput.value);
                imageInput.value = '';
            });
            
            // Add event listener for Enter key in input
            imageInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    addImageBtn.click();
                }
            });
            
            // Function to add a new gallery image
            function addGalleryImage(imageUrl) {
                if (!validateGalleryImage(imageUrl)) return;
                
                const imageItem = createGalleryImageItem(imageUrl);
                galleryContainer.appendChild(imageItem);
            }
            
            // Function to validate a gallery image URL
            function validateGalleryImage(imageUrl) {
                if (!imageUrl.trim()) {
                    showValidationError(imageInput, 'Image URL cannot be empty');
                    return false;
                }
                
                // Simple URL validation
                if (!imageUrl.match(/^https?:\/\/.+\..+/)) {
                    showValidationError(imageInput, 'Please enter a valid URL');
                    return false;
                }
                
                return true;
            }
            
            // Function to create a gallery image item
            function createGalleryImageItem(imageUrl) {
                const container = document.createElement('div');
                container.className = 'gallery-image-item me-2 mb-2 position-relative';
                
                const img = document.createElement('img');
                img.src = imageUrl;
                img.alt = 'Gallery Image';
                img.className = 'img-thumbnail';
                img.style.width = '100px';
                img.style.height = '100px';
                img.style.objectFit = 'cover';
                
                const removeBtn = document.createElement('button');
                removeBtn.type = 'button';
                removeBtn.className = 'btn btn-sm btn-danger position-absolute top-0 end-0';
                removeBtn.innerHTML = '<i class="bi bi-x"></i>';
                removeBtn.addEventListener('click', function() {
                    container.remove();
                });
                
                const hiddenInput = document.createElement('input');
                hiddenInput.type = 'hidden';
                hiddenInput.name = 'GalleryImages';
                hiddenInput.value = imageUrl;
                
                container.appendChild(img);
                container.appendChild(removeBtn);
                container.appendChild(hiddenInput);
                
                return container;
            }
        }
        
        // Validate the add product form
        function validateAddProductForm() {
            let isValid = true;
            
            // Validate required fields
            const requiredFields = ['Name', 'Category', 'Price', 'ImageUrl'];
            requiredFields.forEach(field => {
                const input = document.getElementById(field);
                if (!input.value.trim()) {
                    showValidationError(input, `${field} is required`);
                    isValid = false;
                }
            });
            
            // Validate Features (at least one feature required)
            const featuresTextarea = document.getElementById('Features');
            if (!featuresTextarea.value.trim()) {
                showValidationError(featuresTextarea, 'At least one feature is required');
                isValid = false;
            }
            
            // Validate Colors (at least one color required)
            const colorsInput = document.getElementById('Colors');
            if (!colorsInput.value.trim()) {
                showValidationError(colorsInput, 'At least one color is required');
                isValid = false;
            }
            
            return isValid;
        }
    </script>
}